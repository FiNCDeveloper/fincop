# Based on onk/onkcop
# https://github.com/onk/onkcop

require:
  - rubocop-rspec

# subject はコピペ可搬性よりもそのまま USAGE であって欲しい
RSpec/DescribedClass:
  EnforcedStyle: explicit

# it が一つしか無いような context では空行を開ける方が読みづらい
#   context "when foo is bar" do
#     let(:foo) { bar }
#     it { is_expected.to do_something }
#   end
RSpec/EmptyLineAfterFinalLet:
  Enabled: false

RSpec/ExampleLength:
  Max: 100

# one-liner の should は書きやすいし意味が通りやすいし副作用も無いので撥ねる必要がない。
# ただ expect 派に対して強制するほどでもないので統一はしない。
RSpec/ImplicitExpect:
  Enabled: false

# let を使うのは context 間で条件が違うものが存在する時だけにしたい。
# before の方が事前条件を整えていることが分かりやすい。
RSpec/InstanceVariable:
  Enabled: false

RSpec/MultipleExpectations:
   Enabled: false

# 変に名前つけて呼ぶ方が分かりづらい。
# テスト対象メソッドを呼ぶだけの subject 以外を書かないようにする方が効く。
RSpec/NamedSubject:
  Enabled: false

RSpec/NestedGroups:
   Enabled: false

# 英語力が本当に高くないとつらいので強制はむずい
RSpec/ContextWording:
   Enabled: false
